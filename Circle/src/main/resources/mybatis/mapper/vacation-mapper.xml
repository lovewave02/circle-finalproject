<?xml version="1.0" encoding="UTF-8" ?>

<!-- DTD 선언 -->
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="vacation">
	<select id="searchWithEmpNo" parameterType="string" resultType="vacation">
		select anva_hstr_emp_no
			 , anva_hstr_type	
			 , to_char(anva_hstr_rdat, 'yyyy-MM-dd') as anva_hstr_rdat
			 , to_char(anva_hstr_sdat, 'yyyy-MM-dd') as anva_hstr_sdat
			 , to_char(anva_hstr_edat, 'yyyy-MM-dd') as anva_hstr_edat
			 , anva_hstr_cont
			 , anva_hstr_conf
			 , anva_hstr_sign_code
			 , case
			 	when (anva_hstr_type = '반차') then to_number(anva_hstr_edat - anva_hstr_sdat) + 0.5
			 	else to_number(anva_hstr_edat - anva_hstr_sdat) + 1
			   end as days
			 , nvl(to_number(anva_hstr_edat - anva_hstr_sdat), 0) as nights
		  from anva_hstr
		 where anva_hstr_emp_no = #{emp_no}
		 order by anva_hstr_rdat desc, anva_hstr_sdat desc, anva_hstr_edat desc
	</select>
	
	<select id="annualTerm" parameterType="string" resultType="string">
		select to_char(floor((sysdate - emp_info_sdat)/365), 'FM00') ||
			   to_char(extract(month from sysdate) - extract(month from emp_info_sdat), 'FM00')
          from emp_info
               where emp_info_emp_no = #{emp_no}
	</select>
	
	<select id="annualLeave" parameterType="string" resultType="int">
		select case
		        when substr(#{annualTerm}, 1, 2) = 0 then to_number(substr(#{annualTerm}, 3, 2))
		        when substr(#{annualTerm}, 1, 2) > 0 then max(anva_deft_anva)
		       end
		  from anva_deft
		 where substr(#{annualTerm}, 1, 2) >= anva_deft_year_term
	</select>
	
	<select id="usedVacationDays" parameterType="string" resultType="double">
		select sum(days)
		  from (select case
		                when (anva_hstr_type = '반차') then to_number(anva_hstr_edat - anva_hstr_sdat) + 0.5
		                else to_number(anva_hstr_edat - anva_hstr_sdat) + 1
		               end as days
		          from anva_hstr
		         where anva_hstr_emp_no = #{emp_no}
		           and upper(anva_hstr_conf) = 'Y'
		         order by anva_hstr_rdat desc
		       )
	</select>
	
	<select id="myDeptCode" parameterType="string" resultType="string">
		select emp_info_dept_code
		  from emp_info
		 where emp_info_emp_no = #{emp_no}
	</select>
	
	<select id="ceoEmpNo" resultType="string">
		select emp_info_emp_no
		  from emp_info
		 where emp_info_job_code = 'J0000'
	</select>
	
	<select id="isUpperEmp" parameterType="map" resultType="string">
		select emp_info_emp_no
          from emp_info
         where emp_info_dept_code = #{dept_code}
           and emp_info_job_code = (select min(emp_info_job_code)
                                      from emp_info
                                     where emp_info_dept_code = #{dept_code}
                                   )
	</select>
	
	<select id="highDept" parameterType="string" resultType="string">
		select dept_info_uper
		  from dept_info
         where dept_info_code = #{dept_code}
		 start with dept_info_code = 'D0000'
	   connect by nocycle prior dept_info_code = dept_info_uper
	</select>
	
	<select id="findSignCode" parameterType="string" resultType="string">
		select sign_code
		  from (select rownum as rnum
					 , sign_code
				  from sign
				 order by sign_wdat desc
			   )
		 where 2 > rnum
	</select>
	
	
	<insert id="addVacation" parameterType="vacationInfo">
		insert into anva_hstr
			 ( anva_hstr_ordr
			 , anva_hstr_emp_no
			 , anva_hstr_type
			 , anva_hstr_rdat
			 , anva_hstr_sdat
			 , anva_hstr_edat
			 , anva_hstr_cont
			 , anva_hstr_conf
			 , anva_hstr_sign_code
			)
		values
			 ( anho_seq.nextval
			 , #{empNo}
			 , #{vacationType}
			 , #{regitDate}
			 , #{startDate}
			 , #{endDate}
			 , #{content}
			 , #{confirm}
			 , #{sign_code}
			 )
	</insert>
</mapper>




























